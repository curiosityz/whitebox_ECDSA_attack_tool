services:
  crawler:
    build: .
    container_name: llh_crawler
    volumes:
      - .:/app
      - ./wait-for-it.sh:/wait-for-it.sh
      - crawler_data:/app/data
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/llh_db
      - CHAINSTACK_BTC_RPC_URL=${CHAINSTACK_BTC_RPC_URL}
      - CHAINSTACK_BTC_RPC_USER=${CHAINSTACK_BTC_RPC_USER}
      - CHAINSTACK_BTC_RPC_PASSWORD=${CHAINSTACK_BTC_RPC_PASSWORD}
    command: >
      bash -c "
        chmod +x /app/start_crawler.sh &&
        /app/start_crawler.sh
      "
    restart: unless-stopped

  attack:
    build: .
    container_name: llh_attack
    volumes:
      - .:/app
      - ./wait-for-it.sh:/wait-for-it.sh
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/llh_db
    command:
      - bash
      - -c
      - |
        chmod +x /wait-for-it.sh &&
        /wait-for-it.sh mongodb:27017 -- sage -python -m src.llh.attack.main
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "sage", "-python", "-c", "import socket; socket.create_connection(('localhost', 8081), timeout=1)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  analysis:
    build: .
    container_name: llh_analysis
    volumes:
      - .:/app
      - ./wait-for-it.sh:/wait-for-it.sh
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/llh_db
    command: >
      bash -c "
        while true; do
          sage -python -m src.llh.analysis.main
          echo 'Analysis sleeping for 1 hour...'
          sleep 3600
        done
      "
    restart: unless-stopped

  mongodb:
    image: mongo:6.0
    container_name: llh_mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped

volumes:
  mongodb_data:
  crawler_data: